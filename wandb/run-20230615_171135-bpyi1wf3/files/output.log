



























100%|██████████| 50/50 [01:01<00:00,  1.24s/it]

3it [00:02,  1.40it/s]
{'prediction': tensor([ 83.9662,  33.9920, 118.4338,  59.3585], device='cuda:0'), 'true': [tensor([105.,  53., 142.,  84.])]}
7it [00:04,  1.65it/s]
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.stack((torch.tensor(outputs[0], dtype=torch.uint8), torch.tensor(bboxes[0], dtype=torch.uint8)))))
{'prediction': tensor([ 86.2223,  34.7162, 121.0863,  60.4223], device='cuda:0'), 'true': [tensor([109.,  56., 140.,  87.])]}
{'prediction': tensor([ 80.4815,  35.0005, 115.1906,  61.6413], device='cuda:0'), 'true': [tensor([ 98.,  57., 139.,  96.])]}
{'prediction': tensor([ 83.7270,  35.9598, 119.5003,  62.4546], device='cuda:0'), 'true': [tensor([102.,  60., 139.,  94.])]}
{'prediction': tensor([ 85.7563,  33.7761, 119.9263,  58.9181], device='cuda:0'), 'true': [tensor([104.,  52., 146.,  87.])]}
  2%|▏         | 1/50 [00:00<00:47,  1.02it/s]
{'prediction': tensor([ 83.4483,  34.0215, 118.0989,  59.6204], device='cuda:0'), 'true': [tensor([ 99.,  51., 141.,  88.])]}
Saving the best model





























100%|██████████| 50/50 [01:01<00:00,  1.23s/it]

2it [00:01,  1.12it/s]
{'prediction': tensor([ 91.1858,  43.4464, 124.9763,  71.6297], device='cuda:0'), 'true': [tensor([ 97.,  71., 135., 102.])]}

4it [00:03,  1.07it/s]
{'prediction': tensor([ 95.3548,  41.9500, 129.5513,  71.0391], device='cuda:0'), 'true': [tensor([ 97.,  52., 140.,  87.])]}

7it [00:06,  1.15it/s]
{'prediction': tensor([107.4007,  36.6198, 142.7185,  66.4475], device='cuda:0'), 'true': [tensor([111.,  50., 146.,  78.])]}
{'prediction': tensor([102.8088,  36.4981, 140.2681,  68.7374], device='cuda:0'), 'true': [tensor([108.,  51., 150.,  85.])]}
{'prediction': tensor([117.4906,  20.0363, 157.6329,  57.3808], device='cuda:0'), 'true': [tensor([105.,  23., 143.,  58.])]}
Saving the best model
  2%|▏         | 1/50 [00:01<01:04,  1.32s/it]



























100%|██████████| 50/50 [00:55<00:00,  1.11s/it]
2it [00:01,  1.25it/s]
{'prediction': tensor([ 99.5248,  38.4538, 137.7988,  69.8706], device='cuda:0'), 'true': [tensor([110.,  46., 153.,  87.])]}

5it [00:03,  1.37it/s]
{'prediction': tensor([101.7867,  47.4626, 140.0669,  77.4108], device='cuda:0'), 'true': [tensor([106.,  57., 147.,  90.])]}
{'prediction': tensor([ 84.2080,  39.7073, 120.7375,  69.3272], device='cuda:0'), 'true': [tensor([ 95.,  48., 134.,  80.])]}
7it [00:04,  1.47it/s]
  0%|          | 0/50 [00:00<?, ?it/s]
{'prediction': tensor([ 89.8141,  42.0084, 128.5134,  72.7243], device='cuda:0'), 'true': [tensor([ 94.,  49., 148., 104.])]}
{'prediction': tensor([102.9391,  39.0774, 137.7174,  66.6908], device='cuda:0'), 'true': [tensor([119.,  45., 156.,  74.])]}
Saving the best model











 34%|███▍      | 17/50 [00:20<00:40,  1.24s/it]