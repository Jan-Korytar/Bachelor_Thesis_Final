


  8%|▊         | 4/50 [00:10<01:26,  1.88s/it]C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:85: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:89: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(


























100%|██████████| 50/50 [01:08<00:00,  1.36s/it]

2it [00:01,  1.22it/s]
{'prediction': tensor([32.4806, 32.8597, 55.7171, 93.7217], device='cuda:0'), 'true': [tensor([ 60., 105., 100., 151.], device='cuda:0')]}

5it [00:04,  1.23it/s]
{'prediction': tensor([32.4806, 32.8597, 55.7171, 93.7217], device='cuda:0'), 'true': [tensor([ 47., 100.,  72., 137.], device='cuda:0')]}
{'prediction': tensor([32.4806, 32.8597, 55.7171, 93.7217], device='cuda:0'), 'true': [tensor([ 46., 100.,  72., 137.], device='cuda:0')]}
7it [00:04,  1.41it/s]
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:121: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.stack((torch.tensor(outputs[0], dtype=torch.uint8), torch.tensor(bboxes[0], dtype=torch.uint8)))))
  2%|▏         | 1/50 [00:00<00:44,  1.11it/s]
{'prediction': tensor([32.4806, 32.8597, 55.7171, 93.7217], device='cuda:0'), 'true': [tensor([ 63., 108.,  97., 146.], device='cuda:0')]}
{'prediction': tensor([32.4806, 32.8597, 55.7171, 93.7217], device='cuda:0'), 'true': [tensor([ 61., 110.,  94., 145.], device='cuda:0')]}
Saving the best model
























100%|██████████| 50/50 [00:50<00:00,  1.01s/it]
1it [00:00,  1.51it/s]

3it [00:02,  1.36it/s]
{'prediction': tensor([ 18.1649,  48.0112,  80.2752, 173.1251], device='cuda:0'), 'true': [tensor([ 52., 102.,  84., 142.], device='cuda:0')]}
{'prediction': tensor([ 18.1649,  48.0112,  80.2752, 173.1251], device='cuda:0'), 'true': [tensor([ 51., 106.,  85., 145.], device='cuda:0')]}
7it [00:04,  1.55it/s]
  0%|          | 0/50 [00:00<?, ?it/s]
{'prediction': tensor([ 18.1649,  48.0112,  80.2752, 173.1251], device='cuda:0'), 'true': [tensor([ 54.,  94.,  91., 136.], device='cuda:0')]}
{'prediction': tensor([ 18.1649,  48.0112,  80.2752, 173.1251], device='cuda:0'), 'true': [tensor([ 65., 102.,  98., 143.], device='cuda:0')]}
{'prediction': tensor([ 18.1649,  48.0112,  80.2752, 173.1251], device='cuda:0'), 'true': [tensor([ 28.,  97.,  63., 140.], device='cuda:0')]}
Saving the best model
























100%|██████████| 50/50 [00:49<00:00,  1.01it/s]
1it [00:00,  1.29it/s]

3it [00:02,  1.28it/s]
{'prediction': tensor([ 22.6318,  56.5409,  73.3875, 170.1990], device='cuda:0'), 'true': [tensor([ 61., 109.,  98., 146.], device='cuda:0')]}
{'prediction': tensor([ 22.6318,  56.5409,  73.3875, 170.1990], device='cuda:0'), 'true': [tensor([ 49.,  98.,  82., 139.], device='cuda:0')]}
7it [00:04,  1.45it/s]
  0%|          | 0/50 [00:00<?, ?it/s]
{'prediction': tensor([ 22.6318,  56.5409,  73.3875, 170.1990], device='cuda:0'), 'true': [tensor([ 39., 106.,  75., 148.], device='cuda:0')]}
{'prediction': tensor([ 22.6318,  56.5409,  73.3875, 170.1990], device='cuda:0'), 'true': [tensor([ 50., 100.,  80., 139.], device='cuda:0')]}
{'prediction': tensor([ 22.6318,  56.5409,  73.3875, 170.1990], device='cuda:0'), 'true': [tensor([ 60., 106.,  96., 144.], device='cuda:0')]}

























100%|██████████| 50/50 [00:50<00:00,  1.02s/it]
2it [00:01,  1.27it/s]
{'prediction': tensor([ 27.8530,  64.3585,  67.0512, 165.6431], device='cuda:0'), 'true': [tensor([ 61., 100.,  97., 142.], device='cuda:0')]}

4it [00:03,  1.27it/s]
{'prediction': tensor([ 27.8530,  64.3585,  67.0512, 165.6431], device='cuda:0'), 'true': [tensor([ 51., 102.,  80., 141.], device='cuda:0')]}

7it [00:05,  1.39it/s]
{'prediction': tensor([ 27.8530,  64.3585,  67.0512, 165.6431], device='cuda:0'), 'true': [tensor([ 28., 100.,  68., 147.], device='cuda:0')]}
{'prediction': tensor([ 27.8530,  64.3585,  67.0512, 165.6431], device='cuda:0'), 'true': [tensor([ 49., 102.,  77., 145.], device='cuda:0')]}
{'prediction': tensor([ 27.8530,  64.3585,  67.0512, 165.6431], device='cuda:0'), 'true': [tensor([ 57., 106.,  90., 147.], device='cuda:0')]}
early stopping