


























100%|██████████| 50/50 [00:57<00:00,  1.15s/it]
0it [00:00, ?it/s]
{'prediction': tensor([-8.9469e+08,  1.6211e+09,  2.2501e+08, -1.8739e+09], device='cuda:0'), 'true': [tensor([ 54., 102.,  89., 138.], device='cuda:0')]}
{'prediction': tensor([-8.1575e+08,  1.4781e+09,  2.0516e+08, -1.7086e+09], device='cuda:0'), 'true': [tensor([ 60., 100.,  93., 144.], device='cuda:0')]}

3it [00:02,  1.39it/s]
{'prediction': tensor([-6.2268e+08,  1.1283e+09,  1.5660e+08, -1.3042e+09], device='cuda:0'), 'true': [tensor([ 55., 109.,  84., 146.], device='cuda:0')]}
7it [00:04,  1.52it/s]
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:100: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.stack((torch.tensor(outputs[0], dtype=torch.uint8), torch.tensor(bboxes[0], dtype=torch.uint8)))))
{'prediction': tensor([-6.3123e+08,  1.1438e+09,  1.5876e+08, -1.3221e+09], device='cuda:0'), 'true': [tensor([ 11., 101.,  42., 139.], device='cuda:0')]}
{'prediction': tensor([-8.4002e+08,  1.5221e+09,  2.1127e+08, -1.7594e+09], device='cuda:0'), 'true': [tensor([ 24., 103.,  56., 147.], device='cuda:0')]}
Saving the best model
Epoch [1/10], Train Loss: -4070347.4874, Val Loss: -74641169.1429


























100%|██████████| 50/50 [00:55<00:00,  1.12s/it]
0it [00:00, ?it/s]

2it [00:01,  1.07it/s]
{'prediction': tensor([-3.1283e+11,  8.6086e+11,  1.0397e+11, -9.1085e+11], device='cuda:0'), 'true': [tensor([ 56., 108.,  85., 144.], device='cuda:0')]}
{'prediction': tensor([-3.0043e+11,  8.2674e+11,  9.9845e+10, -8.7475e+11], device='cuda:0'), 'true': [tensor([ 60., 106.,  91., 141.], device='cuda:0')]}

4it [00:03,  1.23it/s]
{'prediction': tensor([-2.5943e+11,  7.1392e+11,  8.6219e+10, -7.5537e+11], device='cuda:0'), 'true': [tensor([ 60., 105., 100., 151.], device='cuda:0')]}
{'prediction': tensor([-2.5751e+11,  7.0864e+11,  8.5581e+10, -7.4979e+11], device='cuda:0'), 'true': [tensor([ 53., 103.,  95., 145.], device='cuda:0')]}
{'prediction': tensor([-2.9429e+11,  8.0985e+11,  9.7805e+10, -8.5688e+11], device='cuda:0'), 'true': [tensor([ 58., 110.,  89., 144.], device='cuda:0')]}

7it [00:05,  1.30it/s]
Epoch [2/10], Train Loss: -4336059148.3200, Val Loss: -39273761645.7143

























 96%|█████████▌| 48/50 [00:51<00:01,  1.00it/s]
100%|██████████| 50/50 [00:53<00:00,  1.06s/it]
1it [00:00,  1.76it/s]
{'prediction': tensor([-6.5081e+12,  3.1300e+13,  2.2964e+12, -3.2315e+13], device='cuda:0'), 'true': [tensor([ 55., 113.,  85., 146.], device='cuda:0')]}
{'prediction': tensor([-5.7705e+12,  2.7752e+13,  2.0362e+12, -2.8653e+13], device='cuda:0'), 'true': [tensor([ 53.,  99.,  84., 144.], device='cuda:0')]}

4it [00:02,  1.38it/s]
{'prediction': tensor([-5.1481e+12,  2.4759e+13,  1.8165e+12, -2.5562e+13], device='cuda:0'), 'true': [tensor([ 62., 105.,  97., 145.], device='cuda:0')]}
{'prediction': tensor([-5.0107e+12,  2.4098e+13,  1.7681e+12, -2.4880e+13], device='cuda:0'), 'true': [tensor([ 66., 103., 104., 149.], device='cuda:0')]}
{'prediction': tensor([-5.9293e+12,  2.8516e+13,  2.0922e+12, -2.9441e+13], device='cuda:0'), 'true': [tensor([ 66., 105.,  98., 140.], device='cuda:0')]}
Saving the best model
7it [00:04,  1.59it/s]
























100%|██████████| 50/50 [00:50<00:00,  1.02s/it]
0it [00:00, ?it/s]
{'prediction': tensor([-4.7746e+13,  3.2814e+14,  1.8167e+13, -3.3530e+14], device='cuda:0'), 'true': [tensor([ 50.,  99.,  88., 140.], device='cuda:0')]}

2it [00:01,  1.42it/s]
{'prediction': tensor([-3.6454e+13,  2.5054e+14,  1.3870e+13, -2.5600e+14], device='cuda:0'), 'true': [tensor([ 45.,  92.,  78., 136.], device='cuda:0')]}
{'prediction': tensor([-4.1595e+13,  2.8587e+14,  1.5827e+13, -2.9210e+14], device='cuda:0'), 'true': [tensor([ 42., 106.,  72., 144.], device='cuda:0')]}

5it [00:03,  1.40it/s]
{'prediction': tensor([-4.0674e+13,  2.7954e+14,  1.5476e+13, -2.8564e+14], device='cuda:0'), 'true': [tensor([ 62., 109.,  93., 145.], device='cuda:0')]}
{'prediction': tensor([-5.1216e+13,  3.5199e+14,  1.9487e+13, -3.5966e+14], device='cuda:0'), 'true': [tensor([ 59.,  96.,  98., 138.], device='cuda:0')]}
Saving the best model
7it [00:04,  1.58it/s]













 40%|████      | 20/50 [00:40<01:00,  2.00s/it]