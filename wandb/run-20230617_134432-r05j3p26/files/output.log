


  8%|▊         | 4/50 [00:05<00:47,  1.03s/it]C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:85: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:89: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(





















100%|██████████| 50/50 [00:50<00:00,  1.01s/it]
2it [00:01,  1.40it/s]
{'prediction': tensor([ 29.6647,  97.3302, 212.1778, 322.2087], device='cuda:0'), 'true': [tensor([ 60., 106.,  91., 141.], device='cuda:0')]}
{'prediction': tensor([ 28.3228,  92.3071, 201.4182, 305.8203], device='cuda:0'), 'true': [tensor([ 55.,  92.,  91., 135.], device='cuda:0')]}

5it [00:03,  1.39it/s]
{'prediction': tensor([ 27.4896,  89.9030, 195.9457, 297.5037], device='cuda:0'), 'true': [tensor([ 29.,  98.,  62., 138.], device='cuda:0')]}
7it [00:04,  1.53it/s]
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:121: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.stack((torch.tensor(outputs[0], dtype=torch.uint8), torch.tensor(bboxes[0], dtype=torch.uint8)))))
  0%|          | 0/50 [00:00<?, ?it/s]
{'prediction': tensor([ 26.2642,  85.7262, 186.9211, 283.7802], device='cuda:0'), 'true': [tensor([ 42., 106.,  72., 144.], device='cuda:0')]}
{'prediction': tensor([ 27.2985,  89.4282, 195.0014, 296.0411], device='cuda:0'), 'true': [tensor([ 49., 101.,  84., 143.], device='cuda:0')]}
Saving the best model
























100%|██████████| 50/50 [00:50<00:00,  1.00s/it]
1it [00:00,  1.83it/s]
{'prediction': tensor([ 12.7613,  48.6039,  92.2725, 194.3602], device='cuda:0'), 'true': [tensor([ 53., 105.,  91., 146.], device='cuda:0')]}
{'prediction': tensor([ 12.5275,  47.7468,  90.6729, 191.0115], device='cuda:0'), 'true': [tensor([ 71., 112., 107., 150.], device='cuda:0')]}

4it [00:02,  1.56it/s]
{'prediction': tensor([ 12.6090,  48.0684,  91.2768, 192.2761], device='cuda:0'), 'true': [tensor([ 50., 100.,  80., 139.], device='cuda:0')]}
{'prediction': tensor([ 12.6603,  48.2334,  91.5677, 192.8842], device='cuda:0'), 'true': [tensor([ 54., 106.,  82., 139.], device='cuda:0')]}
{'prediction': tensor([ 12.6714,  48.3039,  91.7199, 193.2052], device='cuda:0'), 'true': [tensor([ 71.,  97., 102., 135.], device='cuda:0')]}
7it [00:04,  1.75it/s]
  0%|          | 0/50 [00:00<?, ?it/s]
Saving the best model





















100%|██████████| 50/50 [00:43<00:00,  1.15it/s]
1it [00:00,  1.70it/s]
{'prediction': tensor([ 32.3619, 101.8774,  69.7392, 141.1176], device='cuda:0'), 'true': [tensor([ 32., 102.,  64., 138.], device='cuda:0')]}
{'prediction': tensor([ 32.3445, 101.8656,  69.7342, 141.1063], device='cuda:0'), 'true': [tensor([ 62., 105.,  97., 145.], device='cuda:0')]}

4it [00:02,  1.56it/s]
{'prediction': tensor([ 32.3403, 101.9962,  69.8264, 141.2895], device='cuda:0'), 'true': [tensor([ 27., 114.,  60., 153.], device='cuda:0')]}
{'prediction': tensor([ 32.2985, 101.7599,  69.6616, 140.9615], device='cuda:0'), 'true': [tensor([ 32., 107.,  60., 144.], device='cuda:0')]}
{'prediction': tensor([ 32.3321, 101.9068,  69.7639, 141.1662], device='cuda:0'), 'true': [tensor([ 22.,  95.,  57., 136.], device='cuda:0')]}
7it [00:04,  1.73it/s]
  0%|          | 0/50 [00:00<?, ?it/s]
Saving the best model





















100%|██████████| 50/50 [00:43<00:00,  1.15it/s]
2it [00:01,  1.72it/s]
{'prediction': tensor([ 33.9721, 105.0525,  70.1661, 145.9418], device='cuda:0'), 'true': [tensor([ 47.,  98.,  79., 132.], device='cuda:0')]}
{'prediction': tensor([ 33.8848, 104.7834,  69.9905, 145.5769], device='cuda:0'), 'true': [tensor([ 57., 104.,  94., 146.], device='cuda:0')]}

5it [00:03,  1.52it/s]
{'prediction': tensor([ 33.9171, 104.8956,  70.0618, 145.7278], device='cuda:0'), 'true': [tensor([ 47., 110.,  76., 146.], device='cuda:0')]}
{'prediction': tensor([ 34.0492, 105.2564,  70.3023, 146.2304], device='cuda:0'), 'true': [tensor([ 60., 102.,  88., 140.], device='cuda:0')]}
{'prediction': tensor([ 33.9263, 104.9102,  70.0736, 145.7497], device='cuda:0'), 'true': [tensor([ 55., 109.,  84., 149.], device='cuda:0')]}
{'prediction': tensor([ 34.0001, 105.1156,  70.2101, 146.0362], device='cuda:0'), 'true': [tensor([ 44.,  97.,  84., 141.], device='cuda:0')]}
7it [00:04,  1.74it/s]
  2%|▏         | 1/50 [00:00<00:37,  1.30it/s]




















100%|██████████| 50/50 [00:42<00:00,  1.17it/s]
0it [00:00, ?it/s]
{'prediction': tensor([ 29.7533,  97.6558,  63.7822, 135.5878], device='cuda:0'), 'true': [tensor([ 24., 102.,  68., 150.], device='cuda:0')]}

3it [00:01,  1.53it/s]
{'prediction': tensor([ 29.7497,  97.6309,  63.7680, 135.5544], device='cuda:0'), 'true': [tensor([ 51., 107.,  80., 143.], device='cuda:0')]}
{'prediction': tensor([ 29.7463,  97.6184,  63.7610, 135.5366], device='cuda:0'), 'true': [tensor([ 54., 104.,  86., 144.], device='cuda:0')]}
7it [00:04,  1.69it/s]
  0%|          | 0/50 [00:00<?, ?it/s]
{'prediction': tensor([ 29.7550,  97.6551,  63.7829, 135.5874], device='cuda:0'), 'true': [tensor([ 30.,  84.,  67., 126.], device='cuda:0')]}
{'prediction': tensor([ 29.7734,  97.7097,  63.8187, 135.6630], device='cuda:0'), 'true': [tensor([ 60., 110.,  94., 145.], device='cuda:0')]}





















100%|██████████| 50/50 [00:43<00:00,  1.16it/s]
0it [00:00, ?it/s]

2it [00:02,  1.15s/it]
{'prediction': tensor([ 33.0249, 104.3082,  69.0111, 144.2961], device='cuda:0'), 'true': [tensor([ 47.,  98.,  79., 132.], device='cuda:0')]}
{'prediction': tensor([ 33.1136, 104.5683,  69.1887, 144.6682], device='cuda:0'), 'true': [tensor([ 49., 102.,  77., 145.], device='cuda:0')]}

5it [00:04,  1.16it/s]
{'prediction': tensor([ 33.0630, 104.4445,  69.1018, 144.4896], device='cuda:0'), 'true': [tensor([ 33., 106.,  66., 149.], device='cuda:0')]}
{'prediction': tensor([ 33.1944, 104.8407,  69.3537, 145.0212], device='cuda:0'), 'true': [tensor([ 55., 113.,  85., 146.], device='cuda:0')]}
{'prediction': tensor([ 33.1243, 104.6210,  69.2152, 144.7264], device='cuda:0'), 'true': [tensor([ 59., 100.,  91., 135.], device='cuda:0')]}

7it [00:05,  1.22it/s]