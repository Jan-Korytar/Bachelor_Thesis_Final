






























100%|██████████| 50/50 [01:31<00:00,  1.83s/it]
1it [00:00,  1.34it/s]
{'prediction': tensor([-5645.9858, -6247.3926,  5333.8696,  5809.8706], device='cuda:0'), 'true': [tensor([ 52.,  96.,  85., 134.], device='cuda:0')]}

3it [00:02,  1.26it/s]
{'prediction': tensor([-4588.5801, -5075.4644,  4334.5024,  4726.6611], device='cuda:0'), 'true': [tensor([ 46., 106.,  77., 147.], device='cuda:0')]}
{'prediction': tensor([-4768.4038, -5274.0527,  4504.8569,  4910.8223], device='cuda:0'), 'true': [tensor([ 55., 115.,  79., 150.], device='cuda:0')]}

6it [00:04,  1.18it/s]
{'prediction': tensor([-5345.4717, -5915.3936,  5052.5439,  5503.6167], device='cuda:0'), 'true': [tensor([ 58., 103.,  94., 143.], device='cuda:0')]}
7it [00:05,  1.37it/s]
C:\Users\0005h\OneDrive\Documents\programming\pycharm\Bachelor_thesis\train_bbox.py:99: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.stack((torch.tensor(outputs[0], dtype=torch.uint8), torch.tensor(bboxes[0], dtype=torch.uint8)))))